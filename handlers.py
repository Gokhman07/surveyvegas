import requests
from bs4 import BeautifulSoup
from utility import get_keyboard
from  telegram import  KeyboardButton, ReplyKeyboardMarkup, ParseMode, Location, Venue, InlineKeyboardMarkup
from  telegram.ext import ConversationHandler
from glob import glob
from telegram import ReplyKeyboardRemove
from  random import  choice
from emoji import  emojize
#from sqlitedb import  mdb, search_place, build_keyboard


from utility import SMILE, back_but
#from mysqldb import *

i=0

def sms(bot, update):
    print('–ö—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start. –ß—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—å?')
    smile =emojize(choice(SMILE),use_aliases=True)

    reply_keyboard = [['–ó–ê–ü–û–í–ù–ò–¢–ò –ê–ù–ö–ï–¢–£']]
    bot.message.reply_text((f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ —à–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç–µ {bot.message.chat.first_name} üòä!\n –Ø –±–æ—Ç —è–∫–∏–π –∑–±–∏—Ä–∞—î –≤—Ä–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –≤—ñ–¥ –ø–æ—Å–ª—É–≥ –∫–æ–º–ø–∞–Ω—ñ—ó Vegas  ! \n '
                         f'–ö–æ–º–ø–∞–Ω—ñ—è Vegas  —Ç—É—Ä–±—É—î—Ç—å—Å—è –ø—Ä–æ –∫–æ–º—Ñ–æ—Ä—Ç —Å–≤–æ—ó—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ {smile}!!!'),reply_markup=ReplyKeyboardMarkup( reply_keyboard, resize_keyboard=True, one_time_keyboard=True))
  

def anketa_set_question(bot, update):  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    global i
    reply_keyboard = [["1", "2", "3", "4", "5"]]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    quetions=[ "–û—Ü–µ–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏:","–†–∞–±–æ—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏:",
    "–ö–∞—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–∞ —Å–ª—É–∂–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏:","–ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏:","–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç–µ –ª–∏ –Ω–∞—Å:"]   
    #quetions=get_questions()
   

    print(len(quetions))
   
    if i!=len(quetions):
        bot.message.reply_text(quetions[i],reply_markup=ReplyKeyboardMarkup( reply_keyboard, resize_keyboard=True, one_time_keyboard=True))  
        i=i+1
        print(i)
        
    else:
        reply_keyboard = [['–ó–ê–í–ï–†–®–ò–¢–ò –ó–ê–ü–û–í–ù–ï–ù–ù–Ø']]
        bot.message.reply_text("–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ –æ—Ü—ñ–Ω–∫–∏ (–Ω–∞–ø—ñ—à—ñ—Ç—å –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ó–ê–í–ï–†–®–ò–¢–ò –ó–ê–ü–û–í–ù–ï–ù–ù–Ø')", reply_markup=ReplyKeyboardMarkup( reply_keyboard, resize_keyboard=True, one_time_keyboard=True))
        i=0
           
    
        # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—á–µ–∑–∞–µ—Ç
    #return "evaluation"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def thanks(bot, update):
    bot.message.reply_text("–î—è–∫—É—î–º–æ –∑–∞ –í–∞—à –≤—ñ–¥–≥—É–∫!!",reply_markup=ReplyKeyboardRemove())
  
def next_step():
    return "next"
def main_keyboard(bot, update):
    
  
    bot.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=get_keyboard())

# —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≥–µ–æ–¥–∞–Ω–Ω—ã–µ
def get_location(bot, update):
    print('Hi')
    print(bot.message.location)
   # bot.message.reply_text('{}, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ!'.format(bot.message.chat.first_name))

def make_keyboard(bot,update):
   result=[]
   result= build_keyboard(bot,update)

    
   reply_keyboard = []
   reply_keyboard.append("üîô")
   for el in result:
       print(el)
       reply_keyboard.append(el)
    
   
   

   # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
   bot.message.reply_text(
        f"{bot.message.text}",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard , resize_keyboard=True))

def sendPlace(bot, update):
   
    place = search_place( bot.message.text)
    print(place)
     
   
    bot.message.reply_text(place[8])
    if(place[7]):
       bot.message.reply_text(f"–°–∞–π—Ç: {place[7]}")
    update.bot.send_venue(chat_id=bot.message.chat.id,latitude=place[3], longitude=place[4], title=place[1],address=place[2])

 
   
  
  

def parrot(bot, update):
    bot.message.reply_text(bot.message.text)














